#TCP Socket Client
#Author: jake-young-dev
#Requires: Python 3; Client must be run on Linux-Based machine

#imports
import socket, os, subprocess, select, sys

#client class object
class Client(object):

    #creating client
    def __init__(self):
        #clear terminal for readability
        os.system("clear")
        #get hostname for client
        self.host = socket.gethostname()
        self.getIP()

    #start client
    def start(self):
        #get server address
        self.server = input("Enter Server Address: ")
        #creating socket
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    #connect to server
    def connect(self):
        #attempt server connection
        try:
            self.sock.connect((self.server, 9876))
        except:
            print("\nServer connection failed, closing client.\n")
            self.sock.close()
            exit()

        #connection successful
        print("\nClient@" + self.IP + " has connected to Server@" + self.server + "\n")

        ##interact with server here
        loop = True
        while loop:
            
            print("//:> ", end="", flush=True)

            #create sockets to select from
            socketList = [sys.stdin, self.sock]

            #select socket
            read, write, error = select.select(socketList, [], [])

            for sock in read:
                #incoming message from server
                if sock == self.sock:
                    data = self.sock.recv(1024)
                    if not data:
                        print("\nServer Disconnected, closing...\n")
                        loop = False
                        break
                    else:
                        serverResponse = data.decode().rstrip()
                        print("Server@" + self.server + " sent: " + serverResponse)
                        if serverResponse == "closing":
                            loop = False
                            break
                #user entered a message
                else:
                    msg = sys.stdin.readline()
                    self.sock.send(msg.encode())
                    
        ##

        print("\nClient@" + self.IP + " closed.\n")
        self.sock.close()
        exit()

    #getting system IP
    def getIP(self):
        #running ifconfig command
        response = subprocess.check_output("ifconfig wlan0", shell=True)
        #decoding response
        dResponse = response.decode()
        #splitting response by newline
        addr = str(dResponse).split("\n")
        #search thru lines for inet
        for ip in addr:
            if "inet" in ip:
                #found ip, saving trimmed version
                temp = ip.split(" ")
                self.IP = temp[9].rstrip()

#python main function
if __name__ == "__main__":
    #create client object
    localClient = Client()
    localClient.start()
    localClient.connect()