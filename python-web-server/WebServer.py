#An exremely simple web server using sockets
#Author: jake-young-dev
#Requires: Python 3

## STILL BEING WORKED ON, DOES NOT FUNCTION YET, I DO NOT RECCOMEND RUNNING UNTIL FINISHED ##

## Server currently accepts the first GET request from a browser (typically GET / HTTP/1.1) after recv it ends and displays packet

#imports
import socket, sys, os, subprocess

#web server class
class WebServer(object):
    #create web server
    def __init__(self):
        #clear system for readability and get IP
        systemOS = sys.platform
        if "win" in systemOS:
            os.system("cls")
            self.getWindowsIP()
        else:
            os.system("clear")
            self.getLinuxIP()
        #get hostname
        self.host = socket.gethostname()

    #starting server
    def start(self):
        try:
            self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            self.sock.bind(('0.0.0.0', 80))
            print("Server@" + self.IP + " has started.\n")
        except socket.error as err:
            print("There was an error creating the socket")
            print(str(err))
            print("\n[EXITING]\n")
            exit()

    #connect to client
    def connect(self):
        #wait for client
        print("Waiting for client connection...\n")
        #listen for connections (5 is normal max)
        self.sock.listen(5)
        
        ## Loop for connections/packets here
        #placeholder
        connection, cli = self.sock.accept()

        #use child = os.fork() to handle multple requests, if os.fork() returns zero then it is the child process
            
        #save client
        self.client = cli[0]
        print("Client@" + self.client + " connected.\n")

        #get data from client
        self.readPacket(connection.recv(1024).decode())

        connection.close()
        self.sock.close()

    #read packet and respond
    def readPacket(self, msg):
        lines = msg.split("\r\n")
        for line in lines:
            print(line)

    #getting system IP, windows
    def getWindowsIP(self):
        #running ipconfig command
        response = subprocess.check_output("ipconfig")
        #decoding command response
        dResponse = response.decode()
        #splitting response by newline
        addr = str(dResponse).split("\n")
        #search thru lines for IPv4
        for ip in addr:
            if "IPv4" in ip:
                #found ip, saving the trimmed version
                temp = ip.split(" ")
                self.IP = str(temp[len(temp)-1]).rstrip()

    #getting system IP, linux
    def getLinuxIP(self):
        #running ifconfig command
        response = subprocess.check_output("ifconfig wlan0", shell=True)
        #decoding response
        dResponse = response.decode()
        #splitting response by newline
        addr = str(dResponse).split("\n")
        #search thru lines for inet
        for ip in addr:
            if "inet" in ip:
                #found ip, saving trimmed version
                temp = ip.split(" ")
                self.IP = temp[9].rstrip()
        


#python main function
if __name__ == "__main__":
    server = WebServer()
    server.start()
    server.connect()